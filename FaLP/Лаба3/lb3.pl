
%ВАРИАНТ № 1

% 1) Исходный список преобразуйте в новый "двойной" список таким
% образом, чтобы каждый элемент исходного списка удвоился. Например,
% [1,2,3] –> [1,1,2,2,3,3].

dob([],[]).
dob(L, R):- L = [H|T], R = [H, H|R1], dob(T, R1).


% 2) В непустой список, упорядоченный по неубыванию, добавьте новый
% элемент таким
% образом, чтобы сохранилась упорядоченность. Сортировку не использовать!

adder([], L, R):- R = L.
adder(X, L, R):- L = [H|T], X =< H, R = [X, H | T].
adder(X, L, R):- L = [H|T], X > H, adder(X, T, R1), R = [H | R1].

insert(X, [], [X]).
insert(X, [H|T], [X, H|T]):-X=<H.
insert(X, [H|T], [H|T1]):-X>H, insert(X, T, T1).


% 3) Сформируйте список из всех нечётных чисел в порядке убывания из
% диапазона,
%границы которого вводятся с клавиатуры в произвольном порядке.

нечетные(L, R, []) :- L =:= R, L mod 2 =:= 0, !.
нечетные(L, R, F) :- L =:= R, L mod 2 =\= 0, F = [L|[]],!.
нечетные(L, R, F):- L < R, R mod 2 =\= 0, R1 is R-1, нечетные(L, R1, F1), append([R], F1, F).
нечетные(L, R, F):- L < R, R mod 2 =:= 0, R1 is R-1, нечетные(L, R1, F).
нечетные(L, R, F):- L > R, L mod 2 =\= 0, L1 is L-1, нечетные(L1, R, F1), append([L], F1, F).
нечетные(L, R, F):- L > R, L mod 2 =:= 0, L1 is L-1, нечетные(L1, R, F).


